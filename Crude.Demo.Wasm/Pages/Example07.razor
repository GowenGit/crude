@page "/example-advanced-login-form"

@inject IJSRuntime JsRuntime

<h1 class="main-text">Advanced Login Form</h1>

<div class="example-advanced-login-form">
    <CrudeTree ViewModel="new AdvancedLoginViewModel()" />
</div>

<div class="content">
    <h2 class="main-text">Show me the code</h2>

    <p>
        We change the CSS so we have a single column layout first.
    </p>

    <CodeBlock Value="@Css" />
    
    <p>
        Now we define our view model.
    </p>
    
    <CodeBlock Value="@Csharp" />
    
    <p>
        And finally we add a blazor component.
    </p>

    <CodeBlock Value="@Html" />
</div>


@code {
        private const string Html = @"
<div class=""example-advanced-login-form"" >
    <CrudeTree ViewModel=""new LoginViewModel()"" />
</div>";

        private const string Css = @"
.example-advanced-login-form {
    --grid-setup: auto / auto;
    --grid-full-span: 1 / span 1
}";

        private const string Csharp = @"
public class AdvancedLoginViewModel
{
    [Required]
    [CrudeEmptyPlaceholder]
    [EmailAddress]
    public string Email { get; set; }

    [CrudePassword]
    [CrudeEmptyPlaceholder]
    [CrudeHtmlLabel(""<a href=\""#\"">Forgot your password?</a>"")]
    [Required]
    [Display(Name = ""Password"")]
    public string Password { get; set; }

    [Required]
    [Display(Name = ""Remember Me"")]
    public bool RememberMe { get; set; }

    [CrudeOnSubmit(""Login"")]
    private void OnLogin(EditContext context)
    {
        Console.WriteLine($""User typed in {Email}"");
    }
}";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JsRuntime.InvokeVoidAsync("Highlight");
    }
}